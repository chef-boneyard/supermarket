server_names_hash_bucket_size 64;

upstream unicorn {
  server unix:/tmp/.supermarket.sock.0;
}

<% if node['supermarket']['nginx']['cache'] -%>
proxy_cache_path /var/cache/supermarket levels=1:2 keys_zone=supermarket-cache:512m max_size=1000m inactive=600m;
proxy_temp_path  /var/cache/tmp;

log_format cache '$remote_addr - [$time_local] "$request" $upstream_cache_status $upstream_response_time $upstream_status';
<% end %>

server {
  listen 80 default_server;
  server_name <%= node['supermarket']['host'] %>;
<% if node['supermarket']['force_ssl'] -%>
  proxy_set_header        Host            $host;
  proxy_set_header        X-Real-IP       $remote_addr;
  proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header        X-Forwarded-Proto https;
  proxy_pass_request_headers on;
  proxy_connect_timeout   90;
  proxy_send_timeout      90;
  proxy_read_timeout      90;
  location / {
    if ($http_x_forwarded_proto != 'https') {
      return 301 https://$server_name$request_uri;
    }
  }
}

<%   if node['supermarket']['allow_http_domain'] -%>
<%     node['supermarket']['allow_http_domain'].each do |domain| -%>
server {
  listen 80;
  server_name <%= domain %>;

  location ~ /sitemap\d*.xml.gz {
    root <%= node['supermarket']['home'] %>/current/public;

    break;
  }

  location ~ ^/(assets|system)/ {
    root <%= node['supermarket']['home'] %>/current/public;

    # to serve pre-gzipped version
    gzip_static on;
    expires 1y;
    add_header Cache-Control public;
    add_header ETag "";
    break;
  }

  location / {
    proxy_set_header HOST $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_pass http://unicorn;
    proxy_redirect off;

    # to serve gzipped text and json responses
    gzip on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain application/json;
  }
}
<%     end -%>
<%   end -%>

server {
  listen 443;
<%   if node['supermarket']['ssl_crt_name'] && node['supermarket']['ssl_key_name'] -%>
  ssl_certificate <%= node['supermarket']['ssl_crt_name'] %>
  ssl_certificate_key <%= node['supermarket']['ssl_key_name'] %>
  ssl_ciphers                   HIGH:!kEDH:!ADH:!MD5;
  ssl_prefer_server_ciphers     on;
  ssl_protocols                 SSLv3 TLSv1;
  ssl_session_cache             shared:SSL:4m;
  ssl_session_timeout           5m;
<%   end -%>
<% end -%>

  location ~ /sitemap\d*.xml.gz {
    root <%= node['supermarket']['home'] %>/current/public;

    break;
  }

  location ~ ^/(assets|system)/ {
    root <%= node['supermarket']['home'] %>/current/public;

    # to serve pre-gzipped version
    gzip_static on;
    expires 1y;
    add_header Cache-Control public;
    add_header ETag "";
    break;
  }

<% if node['supermarket']['nginx']['cache'] -%>
  location ~ ^/api/v1/cookbooks/.*/versions/.*(/download)?$ {
    proxy_set_header HOST $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_pass http://unicorn;
    proxy_redirect off;

    proxy_ignore_headers Set-Cookie Cache-Control;
    proxy_buffering	on;

    proxy_cache 	supermarket-cache;
    proxy_cache_valid 	200 302 240m;
    proxy_cache_valid 	any     5m;
    expires		240m;

    # to serve gzipped text and json responses
    gzip on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain application/json;
  }
<% end -%>

  location / {
    proxy_set_header HOST $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_pass http://unicorn;
    proxy_redirect off;

    # to serve gzipped text and json responses
    gzip on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain application/json;
  }
}
